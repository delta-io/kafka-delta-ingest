---
version: '3.9'
services:
  kafka:
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.13
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda:28082,OUTSIDE://localhost:8082
    networks:
      default:
        aliases:
          - redpanda
    ports:
      - 8082:8082
      - 9092:9092
      - 28082:28082
      - 29092:29092

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'redpanda:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  localstack:
    image: localstack/localstack:0.13.1
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,dynamodb
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=${TMPDIR}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4566/health" ]
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000"
      - "10001:10001"
  setup:
    build:
      context: .
      dockerfile: contrib/Dockerfile.setup
    depends_on:
      - kafka
      - localstack
      - azurite
      - schema-registry
    entrypoint: "/bin/bash"
    command:
      - /localstack-setup_emails.sh
    volumes:
      - ./bin/localstack-setup_emails.sh:/localstack-setup_emails.sh
      - "./tests/data/emails/:/data/emails"
  data_loader:
    build:
      context: .
      dockerfile: contrib/Dockerfile.data_loader
    volumes:
      - ./bin/load_data.sh:/app/load_data.sh
      - ./tests/json/:/data
    environment:
      - KAFKA_BROKER=kafka:29092
      - TOPIC=web_requests
      - DATA_FILE=/data/web_requests-100K.json.tar.gz
    depends_on:
      - kafka
    profiles:
      - load-data
    command: ["-c", "chmod +x /app/load_data.sh && /app/load_data.sh"]